
================================================================================
                                   README

                    Earth System Modeling Framework (ESMF)

 Earth System Modeling Framework
 Copyright 2002-2004, University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics
 Laboratory, University of Michigan, National Centers for Environmental
 Prediction, Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 Licensed under the GPL.

================================================================================

README file for ESMF v2.1.0rp3 release.

The files contained here include the ESMF source code and build system.

More information about the ESMF project can be found at the ESMF web site:
        
        http://www.esmf.ucar.edu

For additional documentation on building and running the ESMF please
see the ESMF User's Guide on the ESMF web site, under the "Downloads &
Documentation" link.

The ESMF library source code is also available for download at:

	http://sourceforge.net/projects/esmf

Follow the directions on that webpage to access the ESMF CVS repository.

================================================================================

QuickStart information for the impatient.

 - set environment variable(s) (see below).
 - Type 'gmake' (the GNU make program) to build the ESMF library.
 - Type 'gmake tests' to make and run the unit tests
    (or 'gmake tests_uni' for non-mpi machines).
 - Type 'gmake system_tests' to make and run the system tests
    (or 'gmake system_tests_uni' for non-mpi machines).
 - Type 'gmake examples' to make and run the examples applications
    (or 'gmake examples_uni' for non-mpi machines).
 - Type 'gmake demos' to make and run the demos
    (or 'gmake demos_uni' for non-mpi machines).
 - Type 'gmake ESMF_COUPLED_FLOW' to compile and run a coupled fluid flow 
    demo program.  It will run in parallel, 4-way, compute 3600 time steps, and
    produce 10 data outputs.
 - Type 'gmake ESMF_COUPLED_FLOW_uni' to compile and run a coupled fluid flow 
    demo program on a non-mpi machine.  It will run serially, compute 3600 time
    steps, and produce 10 data outputs.

================================================================================

Directories
-----------

build_config:    Contains makefile fragments that can 
                 be customized by the user for specific platforms,
                 compilers, and sites.

build:           Contains the generic portion of the build, that a
                 user would not be expected to modify.

scripts:         Contains scripts for testing and uniprocessor runs, and some
                 templates.

src:             Contains the source code.

In addition, the following directories are created during the building
and testing stages:

doc:             Contains documentation (if built).

lib:             Contains the ESMF libraries.

mod:             Contains the Fortran module files.

test:            Contains unit and system test executables and output.

examples:	 Contains examples executables and output.


System Information
------------------

The following platforms are fully supported: Alpha; Altix with the following
compiler - Intel 64-bit addressing; Cray X1; Darwin (Mac OSX) with the following
compilers - Absoft and XLF; IBM 32-bit and 64-bit addressing; IRIX64 32-bit and
64-bit addressing; and Linux with any of the following compilers - Intel 32-bit
and 64-bit addressing, Absoft, Lahey, NAG, and PGI.  ESMF is built and
debugged on other platforms on a regular basis.
Check the build_config directory for more information.


Environment Variables
---------------------

The only environment variable which must be set on all platforms 
is ESMF_DIR, which should be set to the path of the top level ESMF directory.
The ESMF_COMPILER environment variable must be set only on 
Linux or Darwin platforms. The possible values on Linux are: absoft, intel,
lahey, nag, or pgi.  On Darwin the options are: absoft or xlf. 
The ESMF_COMM environment variable can be set on Linux platforms to
specify which communications library to use (lam, mpi, mpich, or mpiuni).

There are several other environment variables which can be set to 
customize the ESMF make process.  The README file in the directory 
build_config documents the entire list of environment variables in detail, 
as does the ESMF User's Guide.  Some sites have separate versions of the
makefiles which have already been customized for a particular machine.
See http://sourceforge.net/projects/esmfcontrib/ for the CVS repository
for contributed site-specific makefiles.


Build Information
-----------------

GNU make is required to build the library.  On most systems this will
be just the command gmake.  On others it might be installed as gnumake
or even just make.  In any event, use the --version option with these
make commands to determine which is GNU make.

Build the library with the command:
 
  gmake

or 

  gmake ESMF_BOPT=O

for an optimized version or

  gmake ESMF_BOPT=g

for a debug version.

To build and run the coupled fluid flow demo:

  gmake  ESMF_COUPLED_FLOW
  gmake  ESMF_COUPLED_FLOW_uni  ! for non-mpi machines

To build and run the demos:

  gmake  demos 
  gmake  demos_uni          ! for non-mpi machines

To build and run the system tests:

  gmake  system_tests
  gmake  system_tests_uni   ! for non-mpi machines

To build and run the unit tests:

  gmake  tests
  gmake  tests_uni          ! for non-mpi machines

To build and run the unit tests in exhaustive mode:

  gmake  ESMF_EXHAUSTIVE=ON tests
  gmake  ESMF_EXHAUSTIVE=ON tests_uni    ! for non-mpi machines

The exhaustive unit tests option is a *compile* time option.  Use

  gmake clean 

first if the unit tests have already been compiled without the
ESMF_EXHAUSTIVE=ON option.

Output files from the tests are directed to files in
${ESMF_DIR}/test/test${ESMF_BOPT}/${ESMF_ARCH}.${ESMF_COMPILER}.${ESMF_PREC}.${ESMF_SITE}
directories.  ESMF_SITE will be 'default' if no specific site has
been specified.

To build documentation, including the Requirements Specification,
the User's Guide, and the Fortran Reference Manual:

  gmake doc           ! Builds these three manuals, including pdf and html

Final documentation files will be located in the ${ESMF_DIR}/doc directory.  


Usage
-----

After building ESMF, to use ESMF from Fortran add the directory that contains
the ESMF *.mod file(s),

${ESMF_DIR}/mod/mod${ESMF_BOPT}/${ESMF_ARCH}.${ESMF_COMPILER}.${ESMF_PREC}.${ESMF_SITE}

to your search path for *.mod files.  For most compilers this path is
identified either with a -I or a -M.  You must also link with the ESMF
library.  On some platforms a shared library, libesmf.so, is built. 
On all platforms, a standard library, libesmf.a, is built.  In addition,
on some platforms an MPI bypass library, libmpiuni.a will be built.
These libraries will be located in the following directory:

${ESMF_DIR}/lib/lib${ESMF_BOPT}/${ESMF_ARCH}.${ESMF_COMPILER}.${ESMF_PREC}.${ESMF_SITE}

There is a single ESMF module, called ESMF_Mod, that should be
included in applications with the Fortran USE statement.  It is not
necessary to include any header files in Fortran.

To use ESMF from C/C++, link with the ESMF shared object library and
include the ESMC.h file.

For information on how to link with shared libraries on a particular
platform, please see the link_rules files in the platform directories
in build_config.
 
================================================================================
The latest documentation for the project can be found at:
http://www.esmf.ucar.edu -> Downloads & Documentation

The documentation at this site is for the latest release.  To obtain
the documentation that exactly matches this version, follow the
documentation build procedures outlined above.

Please contact esmf_support@ucar.edu with any questions or problems.

================================================================================
 $Id: README,v 1.53.2.5 2005/05/12 16:07:29 nscollins Exp $
